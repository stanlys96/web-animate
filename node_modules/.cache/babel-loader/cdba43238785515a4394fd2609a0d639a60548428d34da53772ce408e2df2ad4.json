{"ast":null,"code":"import { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useContext } from 'react';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nfunction useProjection(projectionId, _ref, visualElement, ProjectionNodeConstructor) {\n  let {\n    layoutId,\n    layout,\n    drag,\n    dragConstraints,\n    layoutScroll\n  } = _ref;\n  var _a;\n  const initialPromotionConfig = useContext(SwitchLayoutGroupContext);\n  if (!ProjectionNodeConstructor || !visualElement || (visualElement === null || visualElement === void 0 ? void 0 : visualElement.projection)) {\n    return;\n  }\n  visualElement.projection = new ProjectionNodeConstructor(projectionId, visualElement.getLatestValues(), (_a = visualElement.parent) === null || _a === void 0 ? void 0 : _a.projection);\n  visualElement.projection.setOptions({\n    layoutId,\n    layout,\n    alwaysMeasureLayout: Boolean(drag) || dragConstraints && isRefObject(dragConstraints),\n    visualElement,\n    scheduleRender: () => visualElement.scheduleRender(),\n    /**\n     * TODO: Update options in an effect. This could be tricky as it'll be too late\n     * to update by the time layout animations run.\n     * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n     * ensuring it gets called if there's no potential layout animations.\n     *\n     */\n    animationType: typeof layout === \"string\" ? layout : \"both\",\n    initialPromotionConfig,\n    layoutScroll\n  });\n}\nexport { useProjection };","map":{"version":3,"names":["isRefObject","useContext","SwitchLayoutGroupContext","useProjection","projectionId","_ref","visualElement","ProjectionNodeConstructor","layoutId","layout","drag","dragConstraints","layoutScroll","_a","initialPromotionConfig","projection","getLatestValues","parent","setOptions","alwaysMeasureLayout","Boolean","scheduleRender","animationType"],"sources":["/Users/stanly_s/Documents/yocia/node_modules/framer-motion/dist/es/motion/features/use-projection.mjs"],"sourcesContent":["import { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useContext } from 'react';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useProjection(projectionId, { layoutId, layout, drag, dragConstraints, layoutScroll }, visualElement, ProjectionNodeConstructor) {\n    var _a;\n    const initialPromotionConfig = useContext(SwitchLayoutGroupContext);\n    if (!ProjectionNodeConstructor ||\n        !visualElement ||\n        (visualElement === null || visualElement === void 0 ? void 0 : visualElement.projection)) {\n        return;\n    }\n    visualElement.projection = new ProjectionNodeConstructor(projectionId, visualElement.getLatestValues(), (_a = visualElement.parent) === null || _a === void 0 ? void 0 : _a.projection);\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        scheduleRender: () => visualElement.scheduleRender(),\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n    });\n}\n\nexport { useProjection };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,+BAA+B;AAC3D,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,wBAAwB,QAAQ,4CAA4C;AAErF,SAASC,aAAaA,CAACC,YAAY,EAAAC,IAAA,EAA6DC,aAAa,EAAEC,yBAAyB,EAAE;EAAA,IAArG;IAAEC,QAAQ;IAAEC,MAAM;IAAEC,IAAI;IAAEC,eAAe;IAAEC;EAAa,CAAC,GAAAP,IAAA;EAC1F,IAAIQ,EAAE;EACN,MAAMC,sBAAsB,GAAGb,UAAU,CAACC,wBAAwB,CAAC;EACnE,IAAI,CAACK,yBAAyB,IAC1B,CAACD,aAAa,KACbA,aAAa,KAAK,IAAI,IAAIA,aAAa,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACS,UAAU,CAAC,EAAE;IAC1F;EACJ;EACAT,aAAa,CAACS,UAAU,GAAG,IAAIR,yBAAyB,CAACH,YAAY,EAAEE,aAAa,CAACU,eAAe,CAAC,CAAC,EAAE,CAACH,EAAE,GAAGP,aAAa,CAACW,MAAM,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACE,UAAU,CAAC;EACvLT,aAAa,CAACS,UAAU,CAACG,UAAU,CAAC;IAChCV,QAAQ;IACRC,MAAM;IACNU,mBAAmB,EAAEC,OAAO,CAACV,IAAI,CAAC,IAAKC,eAAe,IAAIX,WAAW,CAACW,eAAe,CAAE;IACvFL,aAAa;IACbe,cAAc,EAAEA,CAAA,KAAMf,aAAa,CAACe,cAAc,CAAC,CAAC;IACpD;AACR;AACA;AACA;AACA;AACA;AACA;IACQC,aAAa,EAAE,OAAOb,MAAM,KAAK,QAAQ,GAAGA,MAAM,GAAG,MAAM;IAC3DK,sBAAsB;IACtBF;EACJ,CAAC,CAAC;AACN;AAEA,SAAST,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}