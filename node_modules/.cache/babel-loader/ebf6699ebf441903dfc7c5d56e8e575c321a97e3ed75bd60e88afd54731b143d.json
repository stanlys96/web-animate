{"ast":null,"code":"import { __rest } from 'tslib';\nimport { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { checkIfControllingVariants, checkIfVariantNode, resolveVariantFromProps } from '../../render/utils/variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nfunction makeState(_ref, props, context, presenceContext) {\n  let {\n    scrapeMotionValuesFromProps,\n    createRenderState,\n    onMount\n  } = _ref;\n  const state = {\n    latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n    renderState: createRenderState()\n  };\n  if (onMount) {\n    state.mount = instance => onMount(props, instance, state);\n  }\n  return state;\n}\nconst makeUseVisualState = config => (props, isStatic) => {\n  const context = useContext(MotionContext);\n  const presenceContext = useContext(PresenceContext);\n  return isStatic ? makeState(config, props, context, presenceContext) : useConstant(() => makeState(config, props, context, presenceContext));\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n  const values = {};\n  const blockInitialAnimation = (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false;\n  const motionValues = scrapeMotionValues(props);\n  for (const key in motionValues) {\n    values[key] = resolveMotionValue(motionValues[key]);\n  }\n  let {\n    initial,\n    animate\n  } = props;\n  const isControllingVariants = checkIfControllingVariants(props);\n  const isVariantNode = checkIfVariantNode(props);\n  if (context && isVariantNode && !isControllingVariants && props.inherit !== false) {\n    initial !== null && initial !== void 0 ? initial : initial = context.initial;\n    animate !== null && animate !== void 0 ? animate : animate = context.animate;\n  }\n  const initialAnimationIsBlocked = blockInitialAnimation || initial === false;\n  const variantToSet = initialAnimationIsBlocked ? animate : initial;\n  if (variantToSet && typeof variantToSet !== \"boolean\" && !isAnimationControls(variantToSet)) {\n    const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n    list.forEach(definition => {\n      const resolved = resolveVariantFromProps(props, definition);\n      if (!resolved) return;\n      const {\n          transitionEnd,\n          transition\n        } = resolved,\n        target = __rest(resolved, [\"transitionEnd\", \"transition\"]);\n      for (const key in target) {\n        let valueTarget = target[key];\n        if (Array.isArray(valueTarget)) {\n          /**\n           * Take final keyframe if the initial animation is blocked because\n           * we want to initialise at the end of that blocked animation.\n           */\n          const index = initialAnimationIsBlocked ? valueTarget.length - 1 : 0;\n          valueTarget = valueTarget[index];\n        }\n        if (valueTarget !== null) {\n          values[key] = valueTarget;\n        }\n      }\n      for (const key in transitionEnd) values[key] = transitionEnd[key];\n    });\n  }\n  return values;\n}\nexport { makeUseVisualState };","map":{"version":3,"names":["__rest","useContext","isAnimationControls","PresenceContext","checkIfControllingVariants","checkIfVariantNode","resolveVariantFromProps","useConstant","resolveMotionValue","MotionContext","makeState","_ref","props","context","presenceContext","scrapeMotionValuesFromProps","createRenderState","onMount","state","latestValues","makeLatestValues","renderState","mount","instance","makeUseVisualState","config","isStatic","scrapeMotionValues","values","blockInitialAnimation","initial","motionValues","key","animate","isControllingVariants","isVariantNode","inherit","initialAnimationIsBlocked","variantToSet","list","Array","isArray","forEach","definition","resolved","transitionEnd","transition","target","valueTarget","index","length"],"sources":["/Users/stanly_s/Documents/yocia/node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs"],"sourcesContent":["import { __rest } from 'tslib';\nimport { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { checkIfControllingVariants, checkIfVariantNode, resolveVariantFromProps } from '../../render/utils/variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    return isStatic\n        ? makeState(config, props, context, presenceContext)\n        : useConstant(() => makeState(config, props, context, presenceContext));\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const blockInitialAnimation = (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false;\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants = checkIfControllingVariants(props);\n    const isVariantNode = checkIfVariantNode(props);\n    if (context &&\n        isVariantNode &&\n        !isControllingVariants &&\n        props.inherit !== false) {\n        initial !== null && initial !== void 0 ? initial : (initial = context.initial);\n        animate !== null && animate !== void 0 ? animate : (animate = context.animate);\n    }\n    const initialAnimationIsBlocked = blockInitialAnimation || initial === false;\n    const variantToSet = initialAnimationIsBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition } = resolved, target = __rest(resolved, [\"transitionEnd\", \"transition\"]);\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = initialAnimationIsBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,mBAAmB,QAAQ,iDAAiD;AACrF,SAASC,eAAe,QAAQ,mCAAmC;AACnE,SAASC,0BAA0B,EAAEC,kBAAkB,EAAEC,uBAAuB,QAAQ,iCAAiC;AACzH,SAASC,WAAW,QAAQ,8BAA8B;AAC1D,SAASC,kBAAkB,QAAQ,4CAA4C;AAC/E,SAASC,aAAa,QAAQ,uCAAuC;AAErE,SAASC,SAASA,CAAAC,IAAA,EAA+DC,KAAK,EAAEC,OAAO,EAAEC,eAAe,EAAE;EAAA,IAA/F;IAAEC,2BAA2B;IAAEC,iBAAiB;IAAEC;EAAS,CAAC,GAAAN,IAAA;EAC3E,MAAMO,KAAK,GAAG;IACVC,YAAY,EAAEC,gBAAgB,CAACR,KAAK,EAAEC,OAAO,EAAEC,eAAe,EAAEC,2BAA2B,CAAC;IAC5FM,WAAW,EAAEL,iBAAiB,CAAC;EACnC,CAAC;EACD,IAAIC,OAAO,EAAE;IACTC,KAAK,CAACI,KAAK,GAAIC,QAAQ,IAAKN,OAAO,CAACL,KAAK,EAAEW,QAAQ,EAAEL,KAAK,CAAC;EAC/D;EACA,OAAOA,KAAK;AAChB;AACA,MAAMM,kBAAkB,GAAIC,MAAM,IAAK,CAACb,KAAK,EAAEc,QAAQ,KAAK;EACxD,MAAMb,OAAO,GAAGZ,UAAU,CAACQ,aAAa,CAAC;EACzC,MAAMK,eAAe,GAAGb,UAAU,CAACE,eAAe,CAAC;EACnD,OAAOuB,QAAQ,GACThB,SAAS,CAACe,MAAM,EAAEb,KAAK,EAAEC,OAAO,EAAEC,eAAe,CAAC,GAClDP,WAAW,CAAC,MAAMG,SAAS,CAACe,MAAM,EAAEb,KAAK,EAAEC,OAAO,EAAEC,eAAe,CAAC,CAAC;AAC/E,CAAC;AACD,SAASM,gBAAgBA,CAACR,KAAK,EAAEC,OAAO,EAAEC,eAAe,EAAEa,kBAAkB,EAAE;EAC3E,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjB,MAAMC,qBAAqB,GAAG,CAACf,eAAe,KAAK,IAAI,IAAIA,eAAe,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,eAAe,CAACgB,OAAO,MAAM,KAAK;EACnI,MAAMC,YAAY,GAAGJ,kBAAkB,CAACf,KAAK,CAAC;EAC9C,KAAK,MAAMoB,GAAG,IAAID,YAAY,EAAE;IAC5BH,MAAM,CAACI,GAAG,CAAC,GAAGxB,kBAAkB,CAACuB,YAAY,CAACC,GAAG,CAAC,CAAC;EACvD;EACA,IAAI;IAAEF,OAAO;IAAEG;EAAQ,CAAC,GAAGrB,KAAK;EAChC,MAAMsB,qBAAqB,GAAG9B,0BAA0B,CAACQ,KAAK,CAAC;EAC/D,MAAMuB,aAAa,GAAG9B,kBAAkB,CAACO,KAAK,CAAC;EAC/C,IAAIC,OAAO,IACPsB,aAAa,IACb,CAACD,qBAAqB,IACtBtB,KAAK,CAACwB,OAAO,KAAK,KAAK,EAAE;IACzBN,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAGA,OAAO,GAAIA,OAAO,GAAGjB,OAAO,CAACiB,OAAQ;IAC9EG,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAGA,OAAO,GAAIA,OAAO,GAAGpB,OAAO,CAACoB,OAAQ;EAClF;EACA,MAAMI,yBAAyB,GAAGR,qBAAqB,IAAIC,OAAO,KAAK,KAAK;EAC5E,MAAMQ,YAAY,GAAGD,yBAAyB,GAAGJ,OAAO,GAAGH,OAAO;EAClE,IAAIQ,YAAY,IACZ,OAAOA,YAAY,KAAK,SAAS,IACjC,CAACpC,mBAAmB,CAACoC,YAAY,CAAC,EAAE;IACpC,MAAMC,IAAI,GAAGC,KAAK,CAACC,OAAO,CAACH,YAAY,CAAC,GAAGA,YAAY,GAAG,CAACA,YAAY,CAAC;IACxEC,IAAI,CAACG,OAAO,CAAEC,UAAU,IAAK;MACzB,MAAMC,QAAQ,GAAGtC,uBAAuB,CAACM,KAAK,EAAE+B,UAAU,CAAC;MAC3D,IAAI,CAACC,QAAQ,EACT;MACJ,MAAM;UAAEC,aAAa;UAAEC;QAAW,CAAC,GAAGF,QAAQ;QAAEG,MAAM,GAAG/C,MAAM,CAAC4C,QAAQ,EAAE,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;MAC1G,KAAK,MAAMZ,GAAG,IAAIe,MAAM,EAAE;QACtB,IAAIC,WAAW,GAAGD,MAAM,CAACf,GAAG,CAAC;QAC7B,IAAIQ,KAAK,CAACC,OAAO,CAACO,WAAW,CAAC,EAAE;UAC5B;AACpB;AACA;AACA;UACoB,MAAMC,KAAK,GAAGZ,yBAAyB,GACjCW,WAAW,CAACE,MAAM,GAAG,CAAC,GACtB,CAAC;UACPF,WAAW,GAAGA,WAAW,CAACC,KAAK,CAAC;QACpC;QACA,IAAID,WAAW,KAAK,IAAI,EAAE;UACtBpB,MAAM,CAACI,GAAG,CAAC,GAAGgB,WAAW;QAC7B;MACJ;MACA,KAAK,MAAMhB,GAAG,IAAIa,aAAa,EAC3BjB,MAAM,CAACI,GAAG,CAAC,GAAGa,aAAa,CAACb,GAAG,CAAC;IACxC,CAAC,CAAC;EACN;EACA,OAAOJ,MAAM;AACjB;AAEA,SAASJ,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}